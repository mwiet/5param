
-------------------------------
---Common fields---------------             ;EFN = empty for none

main_chain = 'emcee_5param_obs_576310_mcmc_pippi.hdf5:/sampling'            ;Filename of chain to operate on

comparison_chain =                          ;Filename of secondary chain to operate on, for comparison (EFN)

do_posterior_pdf = T                        ;Parse, script or plot posterior pdfs
do_profile_like = T                         ;Parse, script or plot chain into profile likelihoods
oneD_contour_levels = 68.3 95.4 99.7             ;Contour levels to plot in 1D plots (EFN; script operation ignores actual values)
twoD_contour_levels = 68.3 95.4 99.7             ;Contour levels to plot in 2D plots (EFN; script operation ignores actual values)
oneD_plot_quantities = 1 2 3 4 5            ;Parameters/observables to construct 1D plots of (EFN)
twoD_plot_quantities = {1,5} {2,5} {3,5} {4,5} {1,4} {2,4} {3,4} {1,3} {2,3} {1,2} ;Parameters/observable combinations to make 2D plots of (EFN)
plot_observables = 
-------------------------------
---Parsing---------------------

parse_dir = 'parse'                         ;Directory to save parsing output in (EFN; default is to place parsed data in same folder as chains)

cut_on_invalid_observables = F              ;Cut on any invalid entries in an hdf5 file, not just the likelihood (defaults to false, meaning cut on likelihood only)

default_bins = 40                           ;Default number of bins to sort samples into in each direction.
number_of_bins =                            ;Bins to use for specific observables (overrides default)
interpolated_resolution = 500               ;Resolution of binwise interpolation for plotting (~300+ for publication)
interpolation_method = 'bilinear'           ;Either bilinear (default) or spline (watch out for ringing in the latter case)

chain_type = MCMC                           ;Algorithm used to generate chain (valid: MCMC, MultiNest, other)
compute_evidence = F                        ;Compute and print evidence (only if chain_type = MCMC)
bf_lnlike_for_profile_like =                ;Denominator of profile likelihood ratio (if empty, set to best fit determined from chain)

use_log_scale = 3 5                         ;Parameters/observables that need to be converted to a log scale for display (EFN)
quantity_rescalings =                       ;Scaling factors to apply to any columns in chains (EFN)
data_ranges =                               ;Discard any points outside these ranges of parameters/observables

labels_from_file =                          ;Either a filename or blank (quantity_labels is ignored if a filename is given)
preamble =                                  ;A one-line python preamble to run before processing functional datastreams.
assign_to_pippi_datastream  =  'LogLike':0 \
                               'logzsol':1 \
                               'dust2':2 \
                               'tau':3 \
                               'tage':4 \
                               'mass':5 \
			       'multiplicity': 6 \
                                            ;Reassign a named hdf5 data stream to a particular column index in pippi (use pippi probe to test; EFN)
quantity_labels =   0:'lnlike' \
                    1:'$log_{10}(Z/Z_{\odot})$' \ 
                    2:'$dust_2$ (Diffuse Opt. Depth at 5500 \AA)' \
                    3:'$log_{10}(\tau / 1 Gyr)$' \
                    4:'$t_{age}$ (Gyrs)' \
                    5:'$log_{10}(M / M_{\odot})$' \
		    6: 'multiplicity' \
                                           ;labels for columns in chains (LaTeX for all but multiplicity, prior and likelihood)
-------------------------------
---Scripting-------------------

script_dir = 'scripts'                      ;Directory to save scripts in (EFN; default is to place scripts in same folder as parse output)

legend_on_1D =                              ;1D plots that should include legends
legend_locations_1D = 'tr'                  ;Locations of legends for 1D plots (subset of oneD_plot_quantities)
plot_as_histograms_1D = T                   ;Plot 1D distributions as histograms with no interpolation
key_on_1D =                                 ;2D plots that should include keys for best fit, posterior mean and/or reference pt
key_locations_1D =                          ;Locations of keys for 1D plots

legend_on_2D =                              ;2D plots that should include legends
legend_locations_2D =                       ;Locations of legends for 2D plots (single location or partial list that will be filled in with 'bl')
key_on_2D =                                 ;2D plots that should include keys for best fit, posterior mean and/or reference pt
key_locations_2D =                          ;Locations of keys for 2D plots
plot_colourbar_2D =                         ;2D plots that should include colourbars

plot_comparison = F                         ;Overplot distributions from comparisonFilename in 1D plots and contours in 2D plots
extra_legend_lines =                        ;Additional text lines to be included in any legends (EFN)
blame =                                      ;Credit line to be placed in top corner of all plots
yaxis_number_angle = -90                    ;Angle relative to vertical for y-axis numerical labels

plot_posterior_mean_on_posterior_pdf = F    ;Indicate the posterior mean in all posterior pdf plots
plot_posterior_mean_on_profile_like = F     ;Indicate the posterior mean in all profile likelihood plots
plot_best_fit_on_posterior_pdf = F          ;Indicate the best fit in all posterior pdf plots
plot_best_fit_on_profile_like = T           ;Indicate the best fit in all profile likelihood plots

axis_ranges = 1:{-2,0.2} \
              2:{0.3,1.2} \
              3:{-1,1} \
              4:{0,13.6} \ 
              5:{6,10} \
  ;Axis ranges over which to plot parameters/observables (defaults to data_ranges if absent)


reference_point =; 1:-0.5 2:0.6 3:-0.3 4:10 5:8          ;Coordinates of reference point (only plotted where one of the listed axes is present)
reference_text =                            ;Key string to be printed for reference point

logo_file =                                 ;Logo pdf file to overplot (EFN)
logo_loc =                                  ;Normalised plot x,y co-ordinates of logo centre
logo_width =                                ;Width to display logo with (as a fraction of default plot width)
colour_scheme = iceCube3sig        ;A recognised pippi colourScheme object (Basic, BlueGold, IceCube, SBClassic,
                                            ; NightOfTheAllanachs, etc - add your own to pippi_colours.py)
-------------------------------
---Plotting--------------------

plot_dir = 'plots'                          ;Directory to save plots in (EFN; default is to place plots in the current directory)
file_prefix =                               ;Prepend prefix to plot filenames (EFN)
file_suffix =                               ;Append suffix to filenames of output plots (EFN)
